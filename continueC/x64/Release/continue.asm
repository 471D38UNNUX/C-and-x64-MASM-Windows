; Listing generated by Microsoft (R) Optimizing Compiler Version 19.42.34433.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	line
PUBLIC	fprintfi
PUBLIC	a
PUBLIC	A
EXTRN	__imp_ExitProcess:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__security_check_cookie:PROC
a	DB	01H DUP (?)
A	DB	01H DUP (?)
_BSS	ENDS
line	DW	0aH
	ORG $+2
fprintfi DD	06425H
_DATA	ENDS
PUBLIC	main
PUBLIC	printf
PUBLIC	_vfprintf_l
PUBLIC	__local_stdio_printf_options
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN27
	DD	imagerel $LN27+305
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN6@printf
	DD	imagerel $LN6@printf+85
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4@vfprintf_l
	DD	imagerel $LN4@vfprintf_l+68
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DQ 00009640f00060f01r	; 1.30596e-308
	DQ	0700b520f0008340fr		; 5.30195e+231
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DQ 07017521b00041b01r		; 9.05146e+231
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT main
_TEXT	SEGMENT
main	PROC						; COMDAT
; File D:\Assembly Project\C\continueC\continue.c
; Line 9
$LN27:
	sub	rsp, 40					; 00000028H
	movzx	eax, BYTE PTR A
	npad	5
$LL4@main:
; Line 12
	movsx	edx, al
	lea	rcx, OFFSET FLAT:fprintfi
	call	printf
; Line 14
	movzx	ecx, BYTE PTR a
	movzx	eax, BYTE PTR A
	cmp	cl, 5
	jne	SHORT $LN10@main
; Line 16
	add	al, 2
; Line 17
	mov	BYTE PTR a, 6
	mov	BYTE PTR A, al
; Line 19
	jmp	SHORT $LL4@main
$LN10@main:
; Line 23
	inc	cl
	inc	al
; Line 25
	mov	BYTE PTR A, al
	mov	BYTE PTR a, cl
	cmp	cl, 9
	jle	SHORT $LL4@main
; Line 27
	lea	rcx, OFFSET FLAT:line
	call	printf
; Line 29
	movzx	eax, BYTE PTR A
	mov	BYTE PTR a, 0
	npad	14
$LL7@main:
; Line 31
	movsx	edx, al
	lea	rcx, OFFSET FLAT:fprintfi
	call	printf
; Line 33
	movzx	ecx, BYTE PTR a
	movzx	eax, BYTE PTR A
	cmp	cl, 5
	jne	SHORT $LN11@main
; Line 35
	add	al, 2
; Line 37
	jmp	SHORT $LN5@main
$LN11@main:
; Line 40
	inc	al
$LN5@main:
; Line 29
	inc	cl
	mov	BYTE PTR A, al
	mov	BYTE PTR a, cl
	cmp	cl, 9
	jle	SHORT $LL7@main
; Line 43
	lea	rcx, OFFSET FLAT:line
	call	printf
; Line 45
	movzx	eax, BYTE PTR A
	mov	BYTE PTR a, 0
	npad	11
$LL8@main:
; Line 49
	movsx	edx, al
	lea	rcx, OFFSET FLAT:fprintfi
	call	printf
; Line 51
	movzx	ecx, BYTE PTR a
	movzx	eax, BYTE PTR A
	cmp	cl, 5
	jne	SHORT $LN12@main
; Line 53
	add	al, 2
; Line 54
	mov	BYTE PTR a, 6
	mov	BYTE PTR A, al
; Line 56
	jmp	SHORT $LL8@main
$LN12@main:
; Line 60
	inc	cl
	inc	al
	mov	BYTE PTR A, al
	mov	BYTE PTR a, cl
	cmp	cl, 9
	jle	SHORT $LL8@main
; Line 62
	xor	ecx, ecx
	call	QWORD PTR __imp_ExitProcess
	int	3
$LN26@main:
main	ENDP
_TEXT	ENDS
END
